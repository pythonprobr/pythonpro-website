# Generated by Django 3.0.4 on 2020-03-16 20:26

from django.db import migrations


def setup_payment_configs(apps, schema_editor):
    PagarmeFormConfig = apps.get_model('django_pagarme', 'PagarmeFormConfig')
    PagarmeItemConfig = apps.get_model('django_pagarme', 'PagarmeItemConfig')
    print()
    setup_payment_configs_function(PagarmeFormConfig, PagarmeItemConfig)


def setup_payment_configs_function(PagarmeFormConfig, PagarmeItemConfig):
    """"""
    config_card_and_boleto = PagarmeFormConfig.objects.first()
    config_card_only = PagarmeFormConfig(
        name='Cart√£o 12 vezes juros 1.66%',
        max_installments=12,
        default_installment=1,
        free_installment=1,
        interest_rate=1.66,
        payments_methods='credit_card',
    )
    config_card_only.save()

    PagarmeItemConfig(
        name='Bootcamp Python Pro',
        slug='bootcamp',
        price=199700,
        tangible=False,
        default_config=config_card_and_boleto,
    ).save()

    PagarmeItemConfig(
        name='Bootcamp Python Pro - 50% de Desconto',
        slug='bootcamp-50-discount',
        price=99700,
        tangible=False,
        default_config=config_card_only,
    ).save()
    PagarmeItemConfig(
        name='Bootcamp Python Pro - 35% de Desconto',
        slug='bootcamp-35-discount',
        price=129700,
        tangible=False,
        default_config=config_card_and_boleto,
    ).save()

    PagarmeItemConfig(
        name='Bootcamp Python Pro - R$497 Off',
        slug='bootcamp-webdev',
        price=150000,
        tangible=False,
        default_config=config_card_and_boleto,
    ).save()

    PagarmeItemConfig(
        name='Bootcamp Python Pro - 50% de Desconto - R$497 Off',
        slug='bootcamp-webdev-50-discount',
        price=50000,
        tangible=False,
        default_config=config_card_only,
    ).save()

    PagarmeItemConfig(
        name='Bootcamp Python Pro - 35% de Desconto - R$497 Off',
        slug='bootcamp-webdev-35-discount',
        price=80000,
        tangible=False,
        default_config=config_card_and_boleto,
    ).save()


class Migration(migrations.Migration):
    dependencies = [
        ('checkout', '0003_data_science_setup'),
    ]

    operations = [
        migrations.RunPython(setup_payment_configs, migrations.RunPython.noop)
    ]
